(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{111:function(e,n,t){"use strict";t.d(n,"a",(function(){return c})),t.d(n,"b",(function(){return s}));var o=t(0),r=t.n(o),i=r.a.createContext({}),a=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},c=function(e){var n=a(e.components);return r.a.createElement(i.Provider,{value:n},e.children)};var p="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=function(e,n){var t={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&-1===n.indexOf(o)&&(t[o]=e[o]);return t}(e,["components","mdxType","originalType","parentName"]),u=a(t),s=o,b=u[c+"."+s]||u[s]||l[s]||i;return t?r.a.createElement(b,Object.assign({},{ref:n},p,{components:t})):r.a.createElement(b,Object.assign({},{ref:n},p))}));function s(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},93:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));t(0);var o=t(111);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a={sidebar_label:"Debugging",title:"Debugging"},c=[{value:"Application Debugging",id:"application-debugging",children:[]},{value:"Debugging Qode process",id:"debugging-qode-process",children:[{value:"Command Line Switches",id:"command-line-switches",children:[]},{value:"External Debuggers",id:"external-debuggers",children:[]}]}],p={rightToc:c},l="wrapper";function u(e){var n=e.components,t=i(e,["components"]);return Object(o.b)(l,r({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"application-debugging"},"Application Debugging"),Object(o.b)("p",null,"Whenever your React NodeGui application is not behaving the way you wanted it to,\nan array of debugging tools might help you find coding errors, performance\nbottlenecks, or optimization opportunities."),Object(o.b)("p",null,"Since a React NodeGui application runs on Qode and Qode is essentially Node.Js. We can consider a NodeGui app as a regular NodeJs app. Hence, you can use any debugging tool that you use with Node.Js\nOne of the most popular way of debugging a Node.Js app is by making use of the ",Object(o.b)("a",r({parentName:"p"},{href:"https://nodejs.org/en/docs/inspector/"}),"Chromium Developer Tools"),"."),Object(o.b)("p",null,"Google offers ",Object(o.b)("a",r({parentName:"p"},{href:"https://developer.chrome.com/devtools"}),"excellent documentation for their developer tools"),".\nWe recommend that you make yourself familiar with them - they are usually one\nof the most powerful utilities in any NodeGui Developer's tool belt."),Object(o.b)("h2",{id:"debugging-qode-process"},"Debugging Qode process"),Object(o.b)("p",null,"To debug JavaScript that's executed in the Qode/Node process you will need to use an external debugger and\nlaunch Qode with the ",Object(o.b)("inlineCode",{parentName:"p"},"--inspect")," or ",Object(o.b)("inlineCode",{parentName:"p"},"--inspect-brk")," switch. Once you run it you can open up Chrome and visit ",Object(o.b)("inlineCode",{parentName:"p"},"chrome://inspect")," where you should see your app listed."),Object(o.b)("h3",{id:"command-line-switches"},"Command Line Switches"),Object(o.b)("p",null,"Use one of the following command line switches to enable debugging of the process:"),Object(o.b)("h4",{id:"--inspectport"},Object(o.b)("inlineCode",{parentName:"h4"},"--inspect=[port]")),Object(o.b)("p",null,"Qode will listen for V8 inspector protocol messages on the specified ",Object(o.b)("inlineCode",{parentName:"p"},"port"),",\nan external debugger will need to connect on this port. The default ",Object(o.b)("inlineCode",{parentName:"p"},"port")," is\n",Object(o.b)("inlineCode",{parentName:"p"},"9229"),"."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-shell"}),"qode --inspect=9229 your/app\n")),Object(o.b)("h4",{id:"--inspect-brkport"},Object(o.b)("inlineCode",{parentName:"h4"},"--inspect-brk=[port]")),Object(o.b)("p",null,"Like ",Object(o.b)("inlineCode",{parentName:"p"},"--inspect")," but pauses execution on the first line of JavaScript."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note")),Object(o.b)("p",null,"If you are using the official boilerplate ",Object(o.b)("inlineCode",{parentName:"p"},"nodegui-starter"),", then you can achieve this by running"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"npm run debug\n")),Object(o.b)("h3",{id:"external-debuggers"},"External Debuggers"),Object(o.b)("p",null,"You will need to use a debugger that supports the V8 inspector protocol."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Connect Chrome by visiting ",Object(o.b)("inlineCode",{parentName:"li"},"chrome://inspect")," and selecting to inspect the\nlaunched NodeGui app present there."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",r({parentName:"li"},{href:"/docs/guides/debugging-in-vscode"}),"Debugging the NodeGui app in VSCode"))))}u.isMDXComponent=!0}}]);