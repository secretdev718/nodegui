(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{143:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"rightToc",(function(){return c})),t.d(n,"metadata",(function(){return p})),t.d(n,"default",(function(){return s}));var i=t(1),o=t(6),a=(t(0),t(150)),r={sidebar_label:"Debugging",title:"Debugging"},c=[{value:"Application Debugging",id:"application-debugging",children:[]},{value:"Debugging Qode process",id:"debugging-qode-process",children:[{value:"Command Line Switches",id:"command-line-switches",children:[]},{value:"External Debuggers",id:"external-debuggers",children:[]}]}],p={id:"guides/debugging",title:"Debugging",description:"## Application Debugging",source:"@site/docs/guides/debugging.md",permalink:"/docs/guides/debugging",sidebar_label:"Debugging",sidebar:"guides",previous:{title:"Networking",permalink:"/docs/guides/networking"},next:{title:"Debugging in VSCode",permalink:"/docs/guides/debugging-in-vscode"}},l={rightToc:c,metadata:p},u="wrapper";function s(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(u,Object(i.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"application-debugging"},"Application Debugging"),Object(a.b)("p",null,"Whenever your React NodeGui application is not behaving the way you wanted it to,\nan array of debugging tools might help you find coding errors, performance\nbottlenecks, or optimization opportunities."),Object(a.b)("p",null,"Since a React NodeGui application runs on Qode and Qode is essentially Node.Js. We can consider a NodeGui app as a regular NodeJs app. Hence, you can use any debugging tool that you use with Node.Js\nOne of the most popular way of debugging a Node.Js app is by making use of the ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://nodejs.org/en/docs/inspector/"}),"Chromium Developer Tools"),"."),Object(a.b)("p",null,"Google offers ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.chrome.com/devtools"}),"excellent documentation for their developer tools"),".\nWe recommend that you make yourself familiar with them - they are usually one\nof the most powerful utilities in any NodeGui Developer's tool belt."),Object(a.b)("h2",{id:"debugging-qode-process"},"Debugging Qode process"),Object(a.b)("p",null,"To debug JavaScript that's executed in the Qode/Node process you will need to use an external debugger and\nlaunch Qode with the ",Object(a.b)("inlineCode",{parentName:"p"},"--inspect")," or ",Object(a.b)("inlineCode",{parentName:"p"},"--inspect-brk")," switch. Once you run it you can open up Chrome and visit ",Object(a.b)("inlineCode",{parentName:"p"},"chrome://inspect")," where you should see your app listed."),Object(a.b)("h3",{id:"command-line-switches"},"Command Line Switches"),Object(a.b)("p",null,"Use one of the following command line switches to enable debugging of the process:"),Object(a.b)("h4",{id:"--inspectport"},Object(a.b)("inlineCode",{parentName:"h4"},"--inspect=[port]")),Object(a.b)("p",null,"Qode will listen for V8 inspector protocol messages on the specified ",Object(a.b)("inlineCode",{parentName:"p"},"port"),",\nan external debugger will need to connect on this port. The default ",Object(a.b)("inlineCode",{parentName:"p"},"port")," is\n",Object(a.b)("inlineCode",{parentName:"p"},"9229"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),"qode --inspect=9229 your/app\n")),Object(a.b)("h4",{id:"--inspect-brkport"},Object(a.b)("inlineCode",{parentName:"h4"},"--inspect-brk=[port]")),Object(a.b)("p",null,"Like ",Object(a.b)("inlineCode",{parentName:"p"},"--inspect")," but pauses execution on the first line of JavaScript."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note")),Object(a.b)("p",null,"If you are using the official boilerplate ",Object(a.b)("inlineCode",{parentName:"p"},"nodegui-starter"),", then you can achieve this by running"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"npm run debug\n")),Object(a.b)("h3",{id:"external-debuggers"},"External Debuggers"),Object(a.b)("p",null,"You will need to use a debugger that supports the V8 inspector protocol."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Connect Chrome by visiting ",Object(a.b)("inlineCode",{parentName:"li"},"chrome://inspect")," and selecting to inspect the\nlaunched NodeGui app present there."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"/docs/guides/debugging-in-vscode"}),"Debugging the NodeGui app in VSCode"))))}s.isMDXComponent=!0},150:function(e,n,t){"use strict";t.d(n,"a",(function(){return c})),t.d(n,"b",(function(){return s}));var i=t(0),o=t.n(i),a=o.a.createContext({}),r=function(e){var n=o.a.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},c=function(e){var n=r(e.components);return o.a.createElement(a.Provider,{value:n},e.children)};var p="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=Object(i.forwardRef)((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=function(e,n){var t={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===n.indexOf(i)&&(t[i]=e[i]);return t}(e,["components","mdxType","originalType","parentName"]),u=r(t),s=i,d=u[c+"."+s]||u[s]||l[s]||a;return t?o.a.createElement(d,Object.assign({},{ref:n},p,{components:t})):o.a.createElement(d,Object.assign({},{ref:n},p))}));function s(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:i,r[1]=c;for(var s=2;s<a;s++)r[s]=t[s];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);