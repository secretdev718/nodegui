(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{111:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return s}));var n=i(0),a=i.n(n),p=a.a.createContext({}),o=function(e){var t=a.a.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):Object.assign({},t,e)),i},r=function(e){var t=o(e.components);return a.a.createElement(p.Provider,{value:t},e.children)};var b="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},l=Object(n.forwardRef)((function(e,t){var i=e.components,n=e.mdxType,p=e.originalType,r=e.parentName,b=function(e,t){var i={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(i[n]=e[n]);return i}(e,["components","mdxType","originalType","parentName"]),l=o(i),s=n,d=l[r+"."+s]||l[s]||c[s]||p;return i?a.a.createElement(d,Object.assign({},{ref:t},b,{components:i})):a.a.createElement(d,Object.assign({},{ref:t},b))}));function s(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=i.length,o=new Array(p);o[0]=l;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r[b]="string"==typeof e?e:n,o[1]=r;for(var s=2;s<p;s++)o[s]=i[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,i)}l.displayName="MDXCreateElement"},83:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return o})),i.d(t,"rightToc",(function(){return r})),i.d(t,"default",(function(){return l}));i(0);var n=i(111);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}function p(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)i=p[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)i=p[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var o={id:"spinboxprops",title:"SpinBoxProps",sidebar_label:"SpinBoxProps"},r=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"Optional cursor",id:"optional-cursor",children:[]},{value:"Optional enabled",id:"optional-enabled",children:[]},{value:"Optional geometry",id:"optional-geometry",children:[]},{value:"Optional id",id:"optional-id",children:[]},{value:"Optional maxSize",id:"optional-maxsize",children:[]},{value:"Optional minSize",id:"optional-minsize",children:[]},{value:"Optional mouseTracking",id:"optional-mousetracking",children:[]},{value:"Optional on",id:"optional-on",children:[]},{value:"Optional pos",id:"optional-pos",children:[]},{value:"Optional prefix",id:"optional-prefix",children:[]},{value:"Optional range",id:"optional-range",children:[]},{value:"Optional ref",id:"optional-ref",children:[]},{value:"Optional singleStep",id:"optional-singlestep",children:[]},{value:"Optional size",id:"optional-size",children:[]},{value:"Optional style",id:"optional-style",children:[]},{value:"Optional styleSheet",id:"optional-stylesheet",children:[]},{value:"Optional suffix",id:"optional-suffix",children:[]},{value:"Optional value",id:"optional-value",children:[]},{value:"Optional visible",id:"optional-visible",children:[]},{value:"Optional windowIcon",id:"optional-windowicon",children:[]},{value:"Optional windowOpacity",id:"optional-windowopacity",children:[]},{value:"Optional windowState",id:"optional-windowstate",children:[]},{value:"Optional windowTitle",id:"optional-windowtitle",children:[]}]}],b={rightToc:r},c="wrapper";function l(e){var t=e.components,i=p(e,["components"]);return Object(n.b)(c,a({},b,i,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(n.b)("p",null,"  ↳ ",Object(n.b)("a",a({parentName:"p"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps")),Object(n.b)("p",null,"  ↳ ",Object(n.b)("strong",{parentName:"p"},"SpinBoxProps")),Object(n.b)("h2",{id:"index"},"Index"),Object(n.b)("h3",{id:"properties"},"Properties"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-cursor"}),"cursor")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-enabled"}),"enabled")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-geometry"}),"geometry")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-id"}),"id")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-maxsize"}),"maxSize")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-minsize"}),"minSize")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-mousetracking"}),"mouseTracking")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-on"}),"on")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-pos"}),"pos")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-prefix"}),"prefix")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-range"}),"range")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-ref"}),"ref")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-singlestep"}),"singleStep")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-size"}),"size")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-style"}),"style")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-stylesheet"}),"styleSheet")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-suffix"}),"suffix")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-value"}),"value")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-visible"}),"visible")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-windowicon"}),"windowIcon")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-windowopacity"}),"windowOpacity")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-windowstate"}),"windowState")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"/docs/api/interfaces/spinboxprops#optional-windowtitle"}),"windowTitle"))),Object(n.b)("h2",{id:"properties-1"},"Properties"),Object(n.b)("h3",{id:"optional-cursor"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," cursor"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"cursor"),"? : ",Object(n.b)("em",{parentName:"p"},"CursorShape | QCursor")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-cursor"}),"cursor"))),Object(n.b)("p",null,"Sets the window mouse cursor. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetcursorcursor"}),"QWidget: setCursor")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-enabled"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," enabled"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"enabled"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | false | true")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-enabled"}),"enabled"))),Object(n.b)("p",null,"Sets the property that tells whether the widget is enabled. In general an enabled widget handles keyboard and mouse events; a disabled widget does not. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetenabledenabled"}),"QWidget: setEnabled")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-geometry"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," geometry"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"geometry"),"? : ",Object(n.b)("em",{parentName:"p"},"Geometry")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-geometry"}),"geometry"))),Object(n.b)("p",null,"Sets the screen position as well as size of the widget. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetgeometryx-y-width-height"}),"QWidget: setGeometry")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-id"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," id"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"id"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | string")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-id"}),"id"))),Object(n.b)("p",null,"Sets the object name (id) of the widget in Qt. Object name can be analogous to id of an element in the web world. Using the objectName of the widget one can reference it in the Qt's stylesheet much like what we do with id in the web world. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetobjectnameobjectname"}),"QWidget: setObjectName")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-maxsize"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," maxSize"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"maxSize"),"? : ",Object(n.b)("em",{parentName:"p"},"Size")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-maxsize"}),"maxSize"))),Object(n.b)("p",null,"Sets the maximum size of the widget. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetmaximumsizewidth-height"}),"QWidget: setMaximumSize")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-minsize"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," minSize"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"minSize"),"? : ",Object(n.b)("em",{parentName:"p"},"Size")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-minsize"}),"minSize"))),Object(n.b)("p",null,"Sets the minimum size of the widget. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetminimumsizewidth-height"}),"QWidget: setMinimumSize")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-mousetracking"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," mouseTracking"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"mouseTracking"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | false | true")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-mousetracking"}),"mouseTracking"))),Object(n.b)("p",null,"Sets the property that tells whether mouseTracking is enabled for the widget. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetmousetrackingismousetracked"}),"QWidget: setMouseTracking")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-on"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," on"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"on"),"? : ",Object(n.b)("em",{parentName:"p"},"ListenerMap")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-on"}),"on"))),Object(n.b)("p",null,"Prop to set the event listener map. See ",Object(n.b)("a",a({parentName:"p"},{href:"/docs/guides/handle-events"}),"Handlong Events")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-pos"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," pos"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"pos"),"? : ",Object(n.b)("em",{parentName:"p"},"Position")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-pos"}),"pos"))),Object(n.b)("p",null,"Sets the screen position of the widget. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetmovex-y"}),"QWidget: move")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-prefix"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," prefix"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"prefix"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | string")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-range"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," range"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"range"),"? : ",Object(n.b)("em",{parentName:"p"},"Range")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-ref"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," ref"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"ref"),"? : ",Object(n.b)("em",{parentName:"p"},"any")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-ref"}),"ref"))),Object(n.b)("p",null,"Prop to set the ref. The ref will return the underlying nodegui widget."),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-singlestep"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," singleStep"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"singleStep"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | number")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-size"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," size"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"size"),"? : ",Object(n.b)("em",{parentName:"p"},"ViewSize")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-size"}),"size"))),Object(n.b)("p",null,"Sets both the minimum and maximum sizes of the widget. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetfixedsizewidth-height"}),"QWidget: setFixedSize")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-style"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," style"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"style"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | string")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-style"}),"style"))),Object(n.b)("p",null,"Sets the inline stylesheet property. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetinlinestylestyle"}),"QWidget: setInlineStyle")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-stylesheet"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," styleSheet"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"styleSheet"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | string")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-stylesheet"}),"styleSheet"))),Object(n.b)("p",null,"Sets the property that holds the widget's style sheet. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetstylesheetstylesheet"}),"QWidget: setStyleSheet")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-suffix"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," suffix"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"suffix"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | string")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-value"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," value"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"value"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | number")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-visible"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," visible"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"visible"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | false | true")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-visible"}),"visible"))),Object(n.b)("p",null,"Shows or hides the widget and its children. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetshow"}),"QWidget: show")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-windowicon"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," windowIcon"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"windowIcon"),"? : ",Object(n.b)("em",{parentName:"p"},"QIcon")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-windowicon"}),"windowIcon"))),Object(n.b)("p",null,"Sets the window icon. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetwindowiconicon"}),"QWidget: setWindowIcon")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-windowopacity"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," windowOpacity"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"windowOpacity"),"? : ",Object(n.b)("em",{parentName:"p"},"Number")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-windowopacity"}),"windowOpacity"))),Object(n.b)("p",null,"This property holds the level of opacity for the window. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetwindowopacityopacity"}),"QWidget: setWindowOpacity")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-windowstate"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," windowState"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"windowState"),"? : ",Object(n.b)("em",{parentName:"p"},"WindowState")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-windowstate"}),"windowState"))),Object(n.b)("p",null,"Sets the window state. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetwindowstatestate"}),"QWidget: setWindowState")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"optional-windowtitle"},Object(n.b)("inlineCode",{parentName:"h3"},"Optional")," windowTitle"),Object(n.b)("p",null,"• ",Object(n.b)("strong",{parentName:"p"},"windowTitle"),"? : ",Object(n.b)("em",{parentName:"p"},"undefined | string")),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Inherited from ",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops"}),"ViewProps"),".",Object(n.b)("a",a({parentName:"em"},{href:"/docs/api/interfaces/viewprops#optional-windowtitle"}),"windowTitle"))),Object(n.b)("p",null,"Sets the window title property. ",Object(n.b)("a",a({parentName:"p"},{href:"https://docs.nodegui.org/docs/api/NodeWidget#widgetsetwindowtitletitle"}),"QWidget: setWindowTitle")))}l.isMDXComponent=!0}}]);